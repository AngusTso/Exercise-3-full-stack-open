{"version":3,"sources":["components/PersonForm.js","components/FilterResult.js","components/Filter.js","components/Person.js","services/number.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","react_default","a","createElement","text","onChange","func","FilterResult","name","Filter","results","map","result","key","id","components_FilterResult","Person","person","number","onClick","url","getNumber","axios","get","then","response","data","saveNumber","newObject","post","deleteNumber","delete","concat","updateNumber","newobj","put","Notification","_ref","message","status","style","border","borderRadius","backgroundColor","color","fontSize","padding","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","ResultToShow","setNewShow","_useState9","_useState10","errorMessage","setErrorMessage","_addNewPerson","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","duplicatePerson","isDuplicate","newObj","end","_end","_message2","wrap","_context","prev","next","preventDefault","forEach","window","confirm","objectSpread","NumberServices","catch","err","setTimeout","abrupt","length","element","error","console","log","stop","apply","this","arguments","useEffect","numbers","components_Notification","components_Filter","target","value","regexp","RegExp","filter","match","onSubmit","_x","components_PersonForm","type","components_Person","deleteobj","undefined","handleDelete","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.0a7d9520.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <span>{props.text}: <input onChange={props.func}/><br/></span>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst FilterResult = (props) => {\r\n  return (\r\n    <p>{props.name}</p>\r\n  )\r\n}\r\n\r\nexport default FilterResult","import React from 'react'\r\nimport FilterResult from './FilterResult'\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n        {props.results.map(result => <span key={result.id}><FilterResult  key={result.id} name={result.name}/></span>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n  return (\r\n        <span key={props.person.name}>{props.person.name} {props.person.number}\r\n          <button key={props.person.name} onClick={props.func}>Delete</button><br/>\r\n        </span>\r\n  )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst url = \"/api/persons\"\r\n\r\nconst getNumber = () => {\r\n    const request = axios.get(url);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst saveNumber = newObject => {\r\n    const request = axios.post(url , newObject);\r\n    return request.then(response => response)\r\n}\r\nconst deleteNumber = (id) => {\r\n    const request = axios.delete(`${url}/${id}`);\r\n    return request.then(response => response)\r\n}\r\n\r\nconst updateNumber = (id , newobj) => {\r\n    const request = axios.put(`${url}/${id}` , newobj)\r\n    return request.then(response => response)\r\n}\r\nexport default {getNumber , saveNumber , deleteNumber , updateNumber}","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    //style for fail and sucess operations\r\n    const successstyle = { \r\n        border: '5px solid green', \r\n        borderRadius: '5px',\r\n        backgroundColor: 'grey',\r\n        color: \"#006400\",\r\n        fontSize: 24,\r\n        padding: '5px',\r\n    }\r\n    const failedstyle = { \r\n        border: '5px solid red', \r\n        borderRadius: '5px',\r\n        backgroundColor: 'grey',\r\n        color: \"#8B0000\",\r\n        fontSize: 24,\r\n        padding: '5px',\r\n    }\r\n    //render based on status of notification\r\n    if(message.status === \"success\"){\r\n        return (\r\n            <div style={successstyle}>\r\n              {message.message}\r\n            </div>\r\n        )\r\n    }\r\n    else if(message.status === \"fail\"){\r\n        return (\r\n            <div style={failedstyle}>\r\n              {message.message}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n              {message.message}\r\n            </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Notification","import { useState ,useEffect } from 'react'\nimport React from 'react'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Person from './components/Person'\nimport NumberServices from \"./services/number\"\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('')\n  const [newNumber , setNewNumber] = useState('')\n  const [ResultToShow , setNewShow]= useState([{name:\"\" , number:\"\" , id: 0}])\n  const [errorMessage , setErrorMessage] = useState({message:\"\" , status:\"\"})\n  useEffect(() => {\n    NumberServices.getNumber()\n                  .then(numbers => {\n                    setPersons(numbers)\n                  })\n                  .catch(err => {\n                    const message = {\n                      message:\"Can't load resource from database , Connection to server lost\",\n                      status:\"fail\"\n                    }\n                    setErrorMessage(message)\n                    setTimeout(() => {setErrorMessage(null)}, 7000)\n                  })\n  },[])\n\n  function handleNameChange(event){\n    setNewName(event.target.value)\n  }\n  function handleNumberChange(event){\n    setNewNumber(event.target.value)\n  }\n  //Use Regexp to search result for both first and last name\n  function handleFilter(event){\n    let result\n    //if the input field isnt empty we do the filter otherwise set the result to show back to empty (Avoid showing unnecessary results)\n    if(event.target.value){\n      //regular experssion for insetitive search\n      const regexp = new RegExp(event.target.value , \"gi\")\n      result = persons.filter(person => person.name.match(regexp))\n      if(result.length < 1) result = [{name:\"\" , number:\"\" , id: 0}]\n      setNewShow(result)\n    }\n    else{\n      result = [{name:\"\" , number:\"\" , id: 0}]\n      setNewShow(result)\n    }\n    return\n  }\n\n  function handleDelete(id){\n    //store the obj in deletobj\n    const deleteobj = persons.filter(person => person.id === id)\n    if(deleteobj === undefined) {\n      const message = {\n        message:\"Can't Delete Person , maybe record already deleted ? Try reload\",\n        status:\"fail\"\n    }\n      setErrorMessage(message)\n      setTimeout(() => {setErrorMessage(null)}, 7000)\n    }\n    //Promt a message to user and if user decide to delete , delete the entry \n    if (window.confirm(`Delete ${deleteobj[0].name} ??`)) {\n      NumberServices.deleteNumber(id).then(response => console.log(response)).catch(err => {\n        const message = {\n          message:\"Can't Delete Person , maybe record already deleted ? Try reload\",\n          status:\"fail\"\n        }\n        setErrorMessage(message)\n        setTimeout(() => {setErrorMessage(null)}, 7000)\n      })\n      const message = {\n        message:`${deleteobj[0].name} deleted`,\n        status:\"success\"\n      }\n      setErrorMessage(message)\n      setTimeout(() => {setErrorMessage(null)}, 5000)\n      const result = persons.filter(person => person.id !== id)\n      setPersons(result)\n    }\n    return\n  }\n\n  //add new person to the person\n  async function addNewPerson(event){\n    let duplicatePerson\n    //prevent reloading\n    event.preventDefault()\n    //if duplicate then we dont add the person to the phonebook\n    let isDuplicate = false;\n    //check if person already exist\n    persons.forEach(person => {\n      if(person.name === newName){\n        duplicatePerson = person\n        isDuplicate = true\n        return\n      }\n    })\n    //if duplifcate then ask user if they want to replace it, yes = replace , no = end handler\n    if(isDuplicate) {\n      if (window.confirm(`${duplicatePerson.name} is already exist , replace the old number with the new one?`)){\n        const newObj = {\n          ...duplicatePerson,\n          number: newNumber\n        }\n        let end = false\n        await NumberServices.updateNumber(duplicatePerson.id ,newObj).catch(err => {\n          \n          const message = {\n            message:\"Can't Update Person\",\n            status:\"fail\"\n          }\n          setErrorMessage(message)\n          setTimeout(() => {setErrorMessage(null)}, 7000)\n          end = true\n        })\n        if(end) return\n        setPersons(persons.map(person => person.id !== duplicatePerson.id ? person : newObj))\n        const message = {\n          message:`${duplicatePerson.name} info updated`,\n          status:\"success\"\n        }\n        setErrorMessage(message)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n      }\n      return\n    }\n    else{\n      //my id generation is using random numner beacuse if The id is based on length + 1 when user delete a second last element , user can't add another person again\n      const person = {\n        name: newName,\n        number: newNumber,\n        id: persons.length+1\n      }\n\n      // prevent same id added twice in db after user delete some record\n      persons.forEach(element => {\n        if(element.id === person.id)\n        person.id += 1\n      })\n      //avoid mutate state directly\n      let end = false;\n      await NumberServices.saveNumber(person).catch((error) => {\n        console.log(error)\n        const message = {\n          message:\"Validation error/internal server error see console\",\n          status:\"fail\"\n        }\n        setErrorMessage(message)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n        end = true;\n      })\n      if(end) return\n      const message = {\n        message:`${person.name} added`,\n        status:\"success\"\n      }\n      setErrorMessage(message)\n      setTimeout(() => {setErrorMessage(null)}, 5000)\n      setPersons(persons.concat(person))\n      return\n    }\n    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <p>Type to search</p>\n      <Filter results={ResultToShow}/>\n      <input onChange={handleFilter}></input>\n      <h2>Add a New</h2>\n      <form onSubmit={addNewPerson}>\n        <div>\n        <PersonForm text=\"name\" func={handleNameChange}/>\n        <PersonForm text=\"Tel no\" func={handleNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>{persons.map(person => <Person key={person.name} person={person} func={() => handleDelete(person.id)}/>)}</div>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport App from './App'\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />)\n"],"sourceRoot":""}